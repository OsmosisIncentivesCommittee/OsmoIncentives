permissions:
  actions: write
  contents: write
name: MakeProposal
on:
  schedule:
    - cron: "0 10 * * 1"
jobs:
  Propose:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout main
        uses: actions/checkout@v3
        with:
          ref: main
          
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
      
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          
      - name: Config name
        run: git config user.name github-actions
        
      - name: Config email
        run: git config user.email github-actions@github.com
        
      - name: Fetch
        run: git fetch
      
      - name: Checkout staging
        run: git checkout staging
    
      - name: Merge liveview
        run: git merge origin/liveview #TODO theirs
      
      - name: Push staging
        run: git push
      
      - name: Checkout main
        run: git checkout main
      
      - name: Squash merge staging
        run: git merge --squash staging --allow-unrelated-histories #TODO theirs
      
      - name: Commit main
        run: git commit -m "Merged staging to main" #TODO make this concat of staging commit messages
      
      - name: Push main
        run: git push

      - name: Checkout staging
        run: git checkout staging
      
      - name: Rebase to main
        run: git rebase -Xtheirs main
      
      - name: Reset staging to main
        run: git reset --hard main

      - name: Push Staging
        run: git push --force

      - name: Checkout liveview
        run: git checkout liveview
      
      - name: Rebase liveview to main/staging
        run: git rebase -Xtheirs main
      
      - name: Reset liveview to main
        run: git reset --hard main

      - name: Push liveview
        run: git push --force

      - name: install osmosis
        run: |
          git clone https://github.com/osmosis-labs/osmosis
          cd osmosis
          git checkout v7.2.0
          make install
          which osmosisd

      - name: load proposer key
        env:
          KEY: ${{ secrets.KEY }}
        run: echo $KEY | osmosisd keys add proposer --recover --keyring-backend=test

      - name: run make proposal script
        run: python3 Propose.py
